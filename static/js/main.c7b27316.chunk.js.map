{"version":3,"sources":["component/card/card.component.jsx","logo.svg","component/card-list/card-list.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","friend","id","name","email","CardList","friends","map","SearchBox","placeholder","handleChange","input","tyep","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredFriend","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAGaA,GCHE,I,YDGK,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,OAAOC,GAAvC,4BACrB,6BAAKL,EAAMI,OAAOE,OAClB,4BAAIN,EAAMI,OAAOG,aEHZC,G,MAAW,SAAAR,GAAK,OACxB,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,QAAQC,KAAI,SAAAN,GAAM,OACpB,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOC,WCJtBM,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACnB,uBAAOZ,UAAU,SAASa,OAAK,EAACC,KAAK,SAASH,YAAaA,EAC3DI,SAAUH,MCkCCI,E,kDAhCb,aAAe,IAAD,8BACZ,gBAaFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXd,QAAS,GACTW,YAAa,IAJH,E,gEAQO,IAAD,OAClBI,MAAM,8CACJC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEV,QAASmB,S,+BAOjC,IAAD,EAC0BC,KAAKN,MAA9Bd,EADD,EACCA,QAASW,EADV,EACUA,YACXU,EAAiBrB,EAAQsB,QAAO,SAAA3B,GAAM,OAC1CA,EAAOE,KAAK0B,cAAcC,SAASb,EAAYY,kBACjD,OACE,sBAAK/B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,aAAcgB,KAAKhB,eAC3D,cAAC,EAAD,CAAUJ,QAASqB,W,GA5BTI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c7b27316.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img alt='friend' src={`https://robohash.org/${props.friend.id}?set=set2&size=180x180`} />\r\n        <h2>{props.friend.name}</h2>\r\n        <p>{props.friend.email}</p>\r\n    </div>\r\n);","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { Card} from '../card/card.component'\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = props=>(\r\n     <div className=\"card-list\">\r\n         {\r\n             props.friends.map(friend => (\r\n                 <Card key={friend.id} friend={friend}/>\r\n             ))\r\n         }\r\n     </div>\r\n);","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox=({placeholder,handleChange}) =>(\r\n    <input className='search' input tyep='search' placeholder={placeholder} \r\n    onChange={handleChange} />\r\n)","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { CardList } from './component/card-list/card-list.component';\nimport { SearchBox } from './component/search-box/search-box.component';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      friends: [],\n      searchField: ''\n    };\n\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').\n      then(res => res.json()).\n      then(users => this.setState({ friends: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { friends, searchField } = this.state;\n    const filteredFriend = friends.filter(friend =>\n      friend.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Friends Rolodex</h1>\n        <SearchBox placeholder='search friends' handleChange={this.handleChange} />\n        <CardList friends={filteredFriend} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}